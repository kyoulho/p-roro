<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.playce.roro.mybatis.domain.inventory.server.ServerMapper">
    <select id="selectServerConnectionInfoByInventoryProcess" resultType="io.playce.roro.common.dto.common.InventoryProcessConnectionInfo">
        select im.inventory_id,
               ip.inventory_process_id,
               sm.representative_ip_address,
               cm.user_name,
               cm.user_password,
               cm.key_file_path,
               cm.key_file_content,
               sm.connection_port,
               sm.enable_su_yn,
               sm.root_password,
               sm.windows_yn
         from server_master sm
         join inventory_master im
           on sm.server_inventory_id = im.inventory_id
         join credential_master cm
           on cm.credential_id = im.credential_id
         join inventory_process ip
           on ip.inventory_id = im.inventory_id
         join inventory_process_group ipg
           on ip.inventory_process_group_id = ipg.inventory_process_group_id
        where im.project_id = #{projectId}
          and ip.inventory_process_type_code = #{inventoryProcessType}
          and ip.inventory_process_result_code = #{inventoryProcessResult}
        order by ip.inventory_process_group_id, ip.inventory_process_id
    </select>
    <select id="selectServerConnectionInfoByInventoryProcessId" resultType="io.playce.roro.common.dto.common.InventoryProcessConnectionInfo">
        select im.project_id,
               im.inventory_id,
               ip.inventory_process_id,
               sm.representative_ip_address,
               cm.user_name,
               cm.user_password,
               cm.key_file_path,
               cm.key_file_content,
               sm.connection_port,
               sm.enable_su_yn,
               sm.root_password,
               sm.windows_yn
          from server_master sm
          join inventory_master im
            on sm.server_inventory_id =
              if(im.server_inventory_id is null, im.inventory_id, im.server_inventory_id)
          join credential_master cm
            on cm.credential_id =
              if(im.credential_id is null, (select credential_id from inventory_master where inventory_id = im.server_inventory_id), im.credential_id)
          join inventory_process ip
            on ip.inventory_id = im.inventory_id
          join inventory_process_group ipg
            on ip.inventory_process_group_id = ipg.inventory_process_group_id
         where ip.inventory_process_id = #{inventoryProcessId}
    </select>

    <select id="getServerSummary" resultType="io.playce.roro.common.dto.inventory.server.Server">
        SELECT s.server_inventory_id
               , i.inventory_name
               , s.representative_ip_address
          FROM server_master s LEFT JOIN inventory_master i
            ON s.server_inventory_id = i.inventory_id
         WHERE s.server_inventory_id = #{inventoryId}
    </select>

    <select id="selectServerCount" resultType="int">
        select count(*)
          from inventory_master im
         inner join project_master pm
            on im.project_id = pm.project_id
         where im.inventory_type_code = 'SVR'
           and im.delete_yn = 'N'
           and pm.delete_yn = 'N'
    </select>

    <select id="selectServerCountByProjectId" resultType="long">
        select count(1)
          from project_master pm
          join inventory_master im
            on im.project_id = pm.project_id
          join server_master sm
            on sm.server_inventory_id = im.inventory_id
         where im.delete_yn = 'N'
           and pm.delete_yn = 'N'
           and pm.project_id = #{projectId}
    </select>

    <select id="selectServerCountPerProjectId" resultType="io.playce.roro.common.dto.history.SubscriptionCount">
        select aa.project_id
             , sum(aa.cnt) as "count"
          from (
          select a.project_id
               , count(1) as cnt
          from (
            select distinct pm.project_id
                 , sm.representative_ip_address
                 , sm.connection_port
              from inventory_master im
              join project_master pm
                on pm.project_id = im.project_id
              join server_master sm
                on sm.server_inventory_id = im.inventory_id
              join inventory_process ip
                on ip.inventory_id = im.inventory_id
               and ip.inventory_process_type_code = 'SCAN'
             group by pm.project_id
                 , sm.representative_ip_address
                 , sm.connection_port
          ) a
          group by a.project_id
          union all
          select a.project_id
               , count(1)
          from (
            select distinct pm.project_id
                 , sm.representative_ip_address
                 , sm.connection_port
              from inventory_master im
              join project_master pm
                on pm.project_id = im.project_id
               and pm.delete_yn = 'N'
               and im.delete_yn = 'N'
              join server_master sm
                on sm.server_inventory_id = im.inventory_id
              left join inventory_process ip
                on ip.inventory_id = im.inventory_id
               and ip.inventory_process_type_code = 'SCAN'
             where ip.inventory_process_id is null
             group by pm.project_id
                 , sm.representative_ip_address
                 , sm.connection_port
          ) a
          group by a.project_id
        ) aa
        group by aa.project_id
    </select>

    <select id="selectServerList" resultType="io.playce.roro.common.dto.inventory.server.ServerResponse">
        select
            im.project_id,
            sm.server_inventory_id,
            im.inventory_type_code,
            im.inventory_detail_type_code,
            im.inventory_analysis_yn,
            im.customer_inventory_code,
            im.customer_inventory_name,
            im.inventory_name as server_inventory_name,
            sm.migration_type_code,
            sm.windows_yn,
            sm.representative_ip_address,
            sm.connection_port,
            sm.monitoring_yn,
            sm.monitoring_cycle,
            sm.monitoring_start_datetime,
            sm.monitoring_end_datetime,
            cm.user_name,
            cm.user_password,
            cm.key_file_name,
            cm.key_file_path,
            cm.key_file_content,
            cm.credential_id,
            sm.enable_su_yn,
            sm.root_password,
            sm.server_location,
            sm.server_usage_type_code,
            sm.hypervisor_type_code,
            sm.dualization_type_code,
            sm.access_control_system_solution_name,
            sm.tpmc,
            sm.buy_date,
            sm.maker_name,
            sm.model_name,
            sm.serial_number,
            sm.discovered_server_yn,
            sm.scheduled_assessment_yn,
            im.regist_datetime,
            im.regist_user_id,
            ua.user_login_id as regist_user_login_id,
            im.modify_datetime,
            im.modify_user_id,
            ua2.user_login_id as modify_user_login_id,
            im.inventory_discovered_datetime,
            im.description,
            IFNULL(mw.middleware_count, 0) AS middleware_count,
            IFNULL(app.application_count, 0) AS application_count,
            IFNULL(db.database_count, 0) AS database_count
        from
            server_master sm
            left join inventory_master im on sm.server_inventory_id = im.inventory_id
            left join service_inventory si on im.inventory_id = si.inventory_id
            inner join credential_master cm on im.credential_id = cm.credential_id
            inner join user_access ua on im.regist_user_id = ua.user_id
            inner join user_access ua2 on im.modify_user_id = ua2.user_id
            left join (
                SELECT
                    server_inventory_id,
                    COUNT(server_inventory_id) AS middleware_count
                FROM
                    inventory_master
                WHERE
                    inventory_type_code  = 'MW'
                    AND delete_yn = 'N'
                GROUP BY
                    server_inventory_id
            ) mw ON mw.server_inventory_id = sm.server_inventory_id
            left join (
                SELECT
                    server_inventory_id,
                    COUNT(server_inventory_id) AS application_count
                FROM
                    inventory_master
                WHERE
                    inventory_type_code  = 'APP'
                    AND delete_yn = 'N'
                GROUP BY
                    server_inventory_id
            ) app ON app.server_inventory_id = sm.server_inventory_id
            left join (
                SELECT
                    server_inventory_id,
                    COUNT(server_inventory_id) AS database_count
                FROM
                    inventory_master
                WHERE
                    inventory_type_code  = 'DBMS'
                    AND delete_yn = 'N'
                GROUP BY
                    server_inventory_id
            ) db ON db.server_inventory_id = sm.server_inventory_id
        where im.project_id = #{projectId}
        <if test="serviceId != null">
            and si.service_id = #{serviceId}
        </if>
            and im.delete_yn = 'N'
        group by sm.server_inventory_id
        order by sm.server_inventory_id desc
    </select>

    <select id="selectServerDetail" resultType="io.playce.roro.common.dto.inventory.server.ServerDetailResponse">
        select im.project_id,
               sm.server_inventory_id,
               im.inventory_type_code,
               im.inventory_detail_type_code,
               im.inventory_analysis_yn,
               im.customer_inventory_code,
               im.customer_inventory_name,
               im.inventory_name as server_inventory_name,
               sm.migration_type_code,
               sm.windows_yn,
               sm.representative_ip_address,
               sm.connection_port,
               cm.user_name,
               cm.user_password,
               cm.key_file_name,
               cm.key_file_path,
               cm.key_file_content,
               cm.credential_id,
               sm.enable_su_yn,
               sm.root_password,
               sm.server_location,
               sm.server_usage_type_code,
               sm.hypervisor_type_code,
               sm.dualization_type_code,
               sm.access_control_system_solution_name,
               sm.tpmc,
               sm.buy_date,
               sm.maker_name,
               sm.model_name,
               sm.serial_number,
               sm.discovered_server_yn,
               sm.scheduled_assessment_yn,
               sm.monitoring_yn,
               sm.monitoring_cycle,
               sm.monitoring_start_datetime,
               sm.monitoring_end_datetime,
               im.description,
               im.regist_datetime,
               im.regist_user_id,
               ua.user_login_id as regist_user_login_id,
               im.modify_datetime,
               im.modify_user_id,
               ua2.user_login_id as modify_user_login_id,
               im.inventory_discovered_datetime
        from
            inventory_master im
                inner join server_master sm
                           on im.inventory_id = sm.server_inventory_id
                inner join credential_master cm
                           on im.credential_id = cm.credential_id
                inner join user_access ua
                           on im.regist_user_id = ua.user_id
                inner join user_access ua2
                           on im.modify_user_id = ua2.user_id
        where
            im.project_id = #{projectId}
            and sm.server_inventory_id = #{serverId}
            and im.inventory_type_code = 'SVR'
            and im.delete_yn = 'N'
    </select>

    <select id="selectServerCountByIpAddressAndPortAndServerId" resultType="int">
        select count(*)
        from
            server_master sm
            inner join inventory_master im
                on sm.server_inventory_id = im.inventory_id
        where
            im.project_id = #{projectId}
            and sm.representative_ip_address = #{representativeIpAddress}
            and sm.connection_port = #{connectionPort}
            <if test="serverId != null">
                and sm.server_inventory_id != #{serverId}
            </if>
            and im.delete_yn = 'N'
    </select>

    <select id="selectMiddlewareCountByProjectIdAndServerId" resultType="int">
        select count(*)
        from
            inventory_master im
        where
            im.project_id = #{projectId}
            and im.server_inventory_id = #{serverId}
            and im.inventory_type_code = 'MW'
            and im.delete_yn = 'N'
    </select>

    <select id="selectApplicationCountByProjectIdAndServerId" resultType="int">
        select count(*)
        from
            inventory_master im
        where
            im.project_id = #{projectId}
            and im.server_inventory_id = #{serverId}
            and im.inventory_type_code = 'APP'
            and im.delete_yn = 'N'
    </select>

    <select id="selectDatabaseCountByProjectIdAndServerId" resultType="int">
        select count(*)
        from
            inventory_master im
        where
            im.project_id = #{projectId}
            and im.server_inventory_id = #{serverId}
            and im.inventory_type_code = 'DBMS'
            and im.delete_yn = 'N'
    </select>

    <select id="selectServerCountByRepresentativeIpAddressAndPortAndProjectId" resultType="int">
        select count(*)
        from inventory_master im
        inner join server_master sm
            on im.inventory_id = sm.server_inventory_id
        where
            im.project_id = #{projectId}
            and im.delete_yn = 'N'
            and sm.representative_ip_address = #{representativeIpAddress}
            and sm.connection_port = #{connectionPort}
            <if test = "inventoryId != null">
                <![CDATA[
                and im.inventory_id <> #{inventoryId}
                ]]>
            </if>
    </select>

    <select id="selectServerExcel" resultType="io.playce.roro.common.dto.inventory.server.ServerExcelResponse">
        select
            im.project_id,
            pm.project_name,
            im.customer_inventory_code,
            im.customer_inventory_name,
            srm.service_id,
            srm.service_name,
            sm.server_inventory_id,
            im.inventory_name as server_inventory_name,
            sm.representative_ip_address,
            sm.connection_port,
            cm.user_name,
            sm.enable_su_yn,
            sm.windows_yn,
            sm.migration_type_code,
            sm.server_location,
            sm.server_usage_type_code,
            sm.hypervisor_type_code,
            sm.dualization_type_code,
            sm.access_control_system_solution_name,
            sm.tpmc,
            sm.buy_date,
            sm.maker_name,
            sm.model_name,
            sm.serial_number,
            im.description,
            tl.labels
        from
            server_master sm left join inventory_master im
            on sm.server_inventory_id = im.inventory_id inner join project_master pm
            on im.project_id = pm.project_id left join service_inventory si
            on im.inventory_id = si.inventory_id inner join service_master srm
            on si.service_id = srm.service_id inner join credential_master cm
            on im.credential_id = cm.credential_id
            left join (
                select lm.label_id, group_concat(lm.label_name separator ',') as labels, il.inventory_id
                from inventory_label il inner join label_master lm on il.label_id = lm.label_id
                group by inventory_id
            ) as tl on tl.inventory_id = im.inventory_id
        where im.project_id = #{projectId}
        <if test="serviceId != null">
            and si.service_id = #{serviceId}
        </if>
        and im.delete_yn = 'N'
        order by im.inventory_id desc
    </select>

    <select id="selectWindowsServer" resultType="io.playce.roro.common.dto.inventory.server.ServerResponse">
        SELECT
            inventory_id AS server_inventory_id,
            inventory_name AS server_inventory_name
        FROM
            INVENTORY_MASTER im
            INNER JOIN SERVER_MASTER sm ON sm.server_inventory_id = im.inventory_id
        WHERE
            im.project_id = #{projectId}
            AND im.inventory_type_code = 'SVR'
            AND im.delete_yn = 'N'
            AND sm.windows_yn = 'Y'
    </select>
    <select id="selectMonitoringServers"
            parameterType="java.util.Date"
            resultType="io.playce.roro.common.dto.inventory.process.MonitoringQueueItem">
        select im.project_id
             , sm.server_inventory_id
             , sm.monitoring_cycle
             , im.inventory_detail_type_code
             , sm.monitoring_start_datetime
             , sm.monitoring_end_datetime
          from server_master sm
          join inventory_master im
            on im.inventory_id = sm.server_inventory_id
           and im.delete_yn = 'N'
          join project_master pm
            on pm.project_id = im.project_id
           and pm.delete_yn = 'N'
         where sm.monitoring_yn = 'Y'
           <if test="now == null">
           and (sm.monitoring_cycle is null or sm.monitoring_cycle = '')
           </if>
           <if test="now != null">
           and sm.monitoring_cycle is not null
           and sm.monitoring_cycle != ''
           and #{now}
           between if(sm.monitoring_start_datetime is null, #{now}, sm.monitoring_start_datetime)
               and if(sm.monitoring_end_datetime is null, #{now}, sm.monitoring_end_datetime)
           </if>
    </select>

    <select id="selectProjectMonitoringServers"
            resultType="io.playce.roro.common.dto.inventory.process.MonitoringQueueItem">
        select im.project_id
        , sm.server_inventory_id
        , sm.monitoring_cycle
        , im.inventory_detail_type_code
        , sm.monitoring_start_datetime
        , sm.monitoring_end_datetime
        from server_master sm
        join inventory_master im
        on im.inventory_id = sm.server_inventory_id
        and im.delete_yn = 'N'
        join project_master pm
        on pm.project_id = im.project_id
        and pm.delete_yn = 'N'
        where sm.monitoring_yn = 'Y'
            and (im.inventory_detail_type_code = 'LINUX' or im.inventory_detail_type_code = 'AIX')
            and im.project_id IN <foreach item="projectId" index="index" collection="projectIds" open="(" separator="," close=")">#{projectId}</foreach>
    </select>

    <select id="selectServerConnectionInfoByInventoryId"
            resultType="io.playce.roro.common.dto.common.ServerConnectionInfo">
        select im.project_id,
               im.inventory_id,
               im.delete_yn,
               sm.representative_ip_address,
               cm.user_name,
               cm.user_password,
               cm.key_file_path,
               cm.key_file_content,
               sm.connection_port,
               sm.windows_yn,
               sm.enable_su_yn,
               sm.root_password
          from server_master sm
          join inventory_master im
            on sm.server_inventory_id = im.inventory_id
          join credential_master cm
            on cm.credential_id = im.credential_id
         where im.inventory_id = #{serverInventoryId}
    </select>

    <select id="getScheduledScanServers" resultType="io.playce.roro.common.dto.inventory.server.ScheduledScanServer">
        select im.project_id
             , sm.server_inventory_id
          from server_master sm
          join inventory_master im
            on im.inventory_id = sm.server_inventory_id
           and im.delete_yn = 'N'
          join project_master pm
            on pm.project_id = im.project_id
           and pm.delete_yn = 'N'
         where sm.scheduled_assessment_yn = 'Y'
    </select>

    <select id="selectServiceTypesForServer" resultType="java.lang.String">
        select case
                    when im.inventory_type_code = 'MW' then (select mm.middleware_type_code from middleware_master mm where im.inventory_id = mm.middleware_inventory_id)
                    when im.inventory_type_code = 'DBMS' then 'DB'
               end as type
          from inventory_master im
         where im.delete_yn = 'N'
           and im.server_inventory_id = #{serverInventoryId}
           and im.inventory_type_code != 'APP'
         group by type
         order by type desc
    </select>
</mapper>