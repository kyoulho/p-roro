-- add column
ALTER TABLE MIDDLEWARE_MASTER ADD JAVA_VERSION VARCHAR(200) NULL COMMENT '자바버전';
ALTER TABLE MIDDLEWARE_MASTER ADD JAVA_VENDOR VARCHAR(200) NULL COMMENT '자바벤더';
ALTER TABLE APPLICATION_MASTER ADD JAVA_VERSION VARCHAR(200) NULL COMMENT '자바버전';
ALTER TABLE APPLICATION_MASTER ADD JAVA_VENDOR VARCHAR(200) NULL COMMENT '자바벤더';
ALTER TABLE SERVER_SUMMARY ADD COLUMN OS_ALIAS VARCHAR(100) NULL COMMENT 'OS별칭';
ALTER TABLE SERVER_SUMMARY ADD COLUMN OS_VERSION VARCHAR(100) NULL COMMENT 'OS 버전';
ALTER TABLE SETTING ADD COLUMN TOOLTIP_ENG VARCHAR(300) NULL COMMENT '툴팁영어';
ALTER TABLE SETTING ADD COLUMN TOOLTIP_KOR VARCHAR(300) NULL COMMENT '툴팁한글';

-- 3rd Party discovery
DELETE FROM CODE_DETAIL WHERE DOMAIN_CODE = 1201;
INSERT INTO CODE_DETAIL(DOMAIN_CODE, COMMON_CODE, CODE_NAME_KOREAN, CODE_NAME_ENGLISH, CODE_DISPLAY_NUMBER, CODE_VALID_YN) VALUES
  (1201,'PROCESS','프로세스','Process',1,'Y'),
  (1201,'RUNUSER','프로세스 실행 사용자','Process Runtime User',2,'Y'),
  (1201,'PKG','패키지','Package',3,'Y'),
  (1201,'SVC','서비스','Service',4,'Y'),
  (1201,'CMD','명령','Command',5,'Y'),
  (1201,'PORT','포트','Port',6,'Y'),
  (1201,'SCHEDULE','스케쥴','Schedule',7,'Y');

-- create table
CREATE TABLE PRODUCT_LIFECYCLE_RULES
(
	PRODUCT_LIFECYCLE_RULES_ID BIGINT AUTO_INCREMENT COMMENT '제품수명주기규칙아이디',
	SOLUTION_TYPE        VARCHAR(100) NOT NULL COMMENT '솔루션유형',
	SOLUTION_NAME        VARCHAR(100) NOT NULL COMMENT '솔루션명',
	VENDOR               VARCHAR(100) NOT NULL COMMENT '벤더',
	OPENSOURCE_YN 		 VARCHAR(1)	  NOT NULL COMMENT '오픈소스 여부',
	PRIMARY KEY (PRODUCT_LIFECYCLE_RULES_ID)
);

CREATE TABLE PRODUCT_LIFECYCLE_RULES_VERSION
(
  PRODUCT_LIFECYCLE_RULES_VERSION_ID BIGINT AUTO_INCREMENT COMMENT '제품수명주기규칙버전아이디',
  VERSION              VARCHAR(100) NOT NULL COMMENT '버전',
  GA_DATETIME          DATETIME NULL COMMENT '제품출시일',
  EOL_DATETIME         DATETIME NULL COMMENT '수명종료일',
  EOS_DATETIME         DATETIME NULL COMMENT '서비스종료일',
  PRODUCT_LIFECYCLE_RULES_ID BIGINT NULL COMMENT '제품수명주기규칙아이디',
  PRIMARY KEY (PRODUCT_LIFECYCLE_RULES_VERSION_ID)
);

CREATE INDEX _PRODUCT_LIFECYCLE_RULES_VERSION_1 ON PRODUCT_LIFECYCLE_RULES_VERSION
(
	PRODUCT_LIFECYCLE_RULES_ID
);

CREATE TABLE INVENTORY_LIFECYCLE_VERSION_LINK (
        INVENTORY_ID         BIGINT NOT NULL COMMENT '인벤토리_아이디',
        JAVA_VERSION_ID      BIGINT NULL COMMENT '자바버전아이디',
        PRODUCT_VERSION_ID   BIGINT NULL COMMENT '제품버전아이디',
        PRIMARY KEY (INVENTORY_ID)
);
CREATE INDEX _INVENTORY_LIFECYCLE_VERSION_LINK_1 ON INVENTORY_LIFECYCLE_VERSION_LINK (
        JAVA_VERSION_ID
);
CREATE INDEX _INVENTORY_LIFECYCLE_VERSION_LINK_2 ON INVENTORY_LIFECYCLE_VERSION_LINK (
        PRODUCT_VERSION_ID
);

CREATE UNIQUE INDEX _INVENTORY_LIFECYCLE_VERSION_LINK_3 ON INVENTORY_LIFECYCLE_VERSION_LINK (
        INVENTORY_ID
);

TRUNCATE SETTING;

CREATE TABLE SERVER_STATUS
(
	SERVER_INVENTORY_ID  BIGINT NOT NULL COMMENT '서버 인벤토리 아이디',
	SERVER_TYPE          VARCHAR(20) NULL COMMENT '서버 타입(Physical,Virtual)',
	MANUFACTURER         VARCHAR(100) NULL COMMENT '제조사',
	MODEL                VARCHAR(100) NULL COMMENT '모델',
	DISK_SIZE            BIGINT NULL COMMENT '디스크 용량',
	DISK_COUNT           INTEGER NULL COMMENT '디스크 갯수',
	DISK_USED            BIGINT NULL COMMENT '디스크 사용량',
	CPU_USAGE            FLOAT NULL COMMENT 'CPU 사용율',
	MEM_USAGE            FLOAT NULL COMMENT '메모리 사용율',
	MONITORING_DATETIME  DATETIME NULL COMMENT '모니터링 일시',
	PRIMARY KEY (SERVER_INVENTORY_ID)
);

CREATE TABLE SERVER_STORAGE
(
	SERVER_STORAGE_ID    BIGINT AUTO_INCREMENT COMMENT '서버 스토리지 아이디',
	SERVER_INVENTORY_ID  BIGINT NOT NULL COMMENT '서버 인벤토리 아이디',
	MANUFACTURER         VARCHAR(100) NULL COMMENT '제조사',
	MODEL                VARCHAR(100) NULL COMMENT '모델',
	DISK_TYPE            VARCHAR(20) NULL COMMENT '디스크 타입(SATA,SAS,SSD)',
	CONNECTION_TYPE      VARCHAR(20) NULL COMMENT '연결 타입(SAN,NAS,Internal)',
	SHARING_YN           VARCHAR(1) NULL COMMENT '공유 여부',
	PRIMARY KEY (SERVER_STORAGE_ID)
);

CREATE TABLE BACKUP_DEVICE
(
	BACKUP_DEVICE_ID     BIGINT AUTO_INCREMENT COMMENT '백업 장치 아이디',
	SERVER_INVENTORY_ID  BIGINT NOT NULL COMMENT '서버 인벤토리 아이디',
	MODEL                VARCHAR(100) NULL COMMENT '모델',
	PRIMARY KEY (BACKUP_DEVICE_ID)
);

CREATE TABLE APPLICATION_STATUS
(
	APPLICATION_INVENTORY_ID    BIGINT NOT NULL COMMENT '애플리케이션 인벤토리 아이디',
	DEVELOP_LANGUAGE            VARCHAR(100) NULL COMMENT '개발언어',
	DEVELOP_LANGUAGE_VERSION    VARCHAR(100) NULL COMMENT '개발언어 버전',
	FRAMEWORK_NAME              VARCHAR(100) NULL COMMENT '프레임워크 명',
	FRAMEWORK_VERSION           VARCHAR(100) NULL COMMENT '프레임워크 버전',
	HTTPS_USE_YN                VARCHAR(1) NULL COMMENT 'HTTPS 사용여부',
	USE_DBMS                    VARCHAR(512) NULL COMMENT '사용 DMBS',
	PRIMARY KEY (APPLICATION_INVENTORY_ID)
);

ALTER TABLE DATABASE_SUMMARY ADD DB_SIZE_MB BIGINT NULL COMMENT 'DB 사이즈(MB)';

-- insert third party
-- Netbackup
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Netbackup', 'Veritas', 'Backup Solution', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'bprd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'bpsched', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'bpdbm', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'bpjobd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'bpcd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'bpbrm', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'bpps', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'vxpbx_exchanged', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PKG', 'VRTS', null, null, 'N');

-- Networker
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Networker', 'EMC', 'Backup Solution', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nsrd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nsrexecd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nsrsnmd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nsradmin', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PKG', 'lgto', null, null, 'N');

-- Veeam
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Veeam', 'Veeam Software', 'Backup Solution', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'veeamconfig', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PKG', 'veeam', null, null, 'N');

-- Commvault
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Commvault', 'Commvault', 'Backup Solution', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'commvault', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'cvlaunchd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'cvd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'CvMountd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'ClMgrS', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'commvault', null, null, 'N');

-- Netvault
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Netvault', 'Quest', 'Backup Solution', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvdevmgr', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvpmgr', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvnmgr', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvcmgr', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvlogdaemon', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvstatsmngr', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvchmgr', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvgui', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nvguiproxy', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PKG', 'krb', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'netvault-catalog', null, null, 'N');

-- Acronis
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Acronis', 'Acronis', 'Backup Solution', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'acronis_mms', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'acronis_agent', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'schedul2.exe', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'schedhlp.exe', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'active_protection_service.exe', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'arsm.exe', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'mms.exe', null, null, 'N');

-- SolarWinds
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('SolarWinds', 'Solarwinds', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'SolarWinds', null, null, 'N');

-- Datadog
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Datadog', 'Datadog', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'datadog-agent', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PKG', 'datadog-agent', null, null, 'N');

-- Site24x7
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Site24x7', 'Zoho', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'Site24x7', null, null, 'N');

-- Nagios
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Nagios', 'Nagios', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'nagios', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'nagios', null, null, 'N');

-- Zabbix
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Zabbix', 'Zabbix', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'zabbix', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'zabbix', null, null, 'N');

-- ManageEngine OpManager
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('ManageEngine OpManager', 'Zoho', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'OpManager', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'ManageEngine OpManager', null, null, 'N');

-- Spiceworks
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Spiceworks', 'Spiceworks', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'Spiceworks.exe', null, null, 'N');

-- Icinga
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Icinga', 'Icinga', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'icinga', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'icinga', null, null, 'N');

-- PRTG
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('PRTG', 'Paessler', 'Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'PRTG', null, null, 'N');

-- Obkio
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Obkio', 'Obkio', 'Network Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'ObkioAgentService', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PORT', '23999', null, null, 'N');

-- Redgate SQL Monitor
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Redgate SQL Monitor', 'Redgate', 'Database Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'SQL Monitor Web Service', null, null, 'N');

-- dbWatch
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('dbWatch', 'dbWatch AS', 'Database Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'dbWatch', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'dbWatch', null, null, 'N');

-- Oracle Enterprise Manager
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Oracle Enterprise Manager', 'Oracle', 'Database Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'mgmt_agent', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'emctl', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'emctl', null, null, 'N');

-- eG Enterprise
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('eG Enterprise', 'eG Innovations', 'Server Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'eGmon', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'eGurkha', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'eGAgentMon', null, null, 'N');

-- Cacti
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Cacti', 'Cacti Group', 'Server Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'cacti', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'cactid', null, null, 'N');

-- New Relic
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('New Relic', 'New Relic', 'Server Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'newrelic-infra', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'newrelic-infra', null, null, 'N');

-- CONTROL-M
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Control-M', 'BMC', 'Batch Job Management', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'emcms', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'emmaintag', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'emselfservicesrv', null, null, 'N');

-- ERWIN
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('ERwin', 'Quest', 'Data Modeling', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'ERwin', null, null, 'N');

-- NAMO ACTIVE SQUARE
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Namo ACTIVE SQUARE', '지란지교소프트', 'Web Editor', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'namowec', null, null, 'N');

-- BI MATRIX
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('BI MATRIX', '비아이매트릭스', 'Data Reporting Tool', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'BIUpdate.exe', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'i-CHECK5.exe', null, null, 'N');

-- VestID
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('VestID', '예티소프트', '인증, 서명, 위변조방지, 보안메일등의 솔루션', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'VestCert', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'VestMail', null, null, 'N');

-- SYSMASTER
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('SysMaster', '티맥스소프트', 'Application Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'smmaster', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'smmaster', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'smagent', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'smdown', null, null, 'N');

-- Rexpert
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Rexpert', '클립소프트', '문서출력보안', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'rexviewer30.exe', null, null, 'N');

-- ONTUNE
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('onTune', '팀스톤', 'Server Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'ontuned', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'OnTuneAgent.exe', null, null, 'N');

-- Tivoli
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Tivoli', 'IBM', 'Infra Management', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'tacmd', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'itmcmd', null, null, 'N');

-- ez-GATOR
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('ez-GATOR', '세넷시스템즈', 'Secure FTP', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'gator.bat', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'gator.sh', null, null, 'N');

-- Moffice v2.0
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Moffice v2.0', '제이니스', '근태관리', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'Moffice', null, null, 'N');

-- WiseGrid
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('WiseGrid', '유니포스트', 'Web Grid Component', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'WiseGrid', null, null, 'N');

-- e-spider
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('e-spider', '헥토데이터', '', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'espiderMan.exe', null, null, 'N');

-- MCCS
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('MCCS', '맨텍', 'HA Solution', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'MCCS HA Service', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'MCCS', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'mccs_agent.service', null, null, 'N');

-- MaxGauge
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('MaxGauge', '엑셈', 'Database Monitoring', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'MaxGauge', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'SVC', 'Exem', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'MaxGauge', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'sysmon', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'PROCESS', 'DG', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'rtsctl', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'dgboot', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'dgdown', null, null, 'N');

-- Blancco
INSERT INTO THIRD_PARTY_SOLUTION (THIRD_PARTY_SOLUTION_NAME, VENDOR, DESCRIPTION, DELETE_YN, REGIST_USER_ID, REGIST_DATETIME, MODIFY_USER_ID, MODIFY_DATETIME) VALUES ('Blancco', 'Blancco', 'Data Erase ', 'N', 1, current_timestamp, 1, current_timestamp);
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'SITCmd.exe', null, null, 'N');
INSERT INTO THIRD_PARTY_SEARCH_TYPE (THIRD_PARTY_SOLUTION_ID, SEARCH_TYPE, SEARCH_VALUE, INVENTORY_TYPE_CODE, WINDOWS_YN, DELETE_YN) VALUES ((SELECT MAX(THIRD_PARTY_SOLUTION_ID) FROM THIRD_PARTY_SOLUTION), 'CMD', 'SITFileShredding.exe', null, null, 'N');

-- Product Lifecycle Rules
INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'CentOS', 'CentOS Project','Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6', STR_TO_DATE('2011-12-09', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2020-11-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7', STR_TO_DATE('2014-07-07', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2024-06-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2019-09-24', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2021-12-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'Ubuntu', 'Canonical','Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('14.04 LTS', STR_TO_DATE('2014-04-17', '%Y-%m-%d'), STR_TO_DATE('2019-04-25', '%Y-%m-%d'), STR_TO_DATE('2024-04-25', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('14.1', STR_TO_DATE('2014-10-23', '%Y-%m-%d'), STR_TO_DATE('2019-04-25', '%Y-%m-%d'), STR_TO_DATE('2015-07-23', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('15.04', STR_TO_DATE('2015-04-23', '%Y-%m-%d'), STR_TO_DATE('2019-04-25', '%Y-%m-%d'), STR_TO_DATE('2016-02-04', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('16.04 LTS', STR_TO_DATE('2016-04-21', '%Y-%m-%d'), STR_TO_DATE('2021-04-30', '%Y-%m-%d'), STR_TO_DATE('2026-04-23', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('16.1', STR_TO_DATE('2016-10-13', '%Y-%m-%d'), STR_TO_DATE('2021-04-30', '%Y-%m-%d'), STR_TO_DATE('2017-07-20', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'RHEL','Red Hat', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6', STR_TO_DATE('2010-11-10', '%Y-%m-%d'), STR_TO_DATE('2016-05-10', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7 POWER', STR_TO_DATE('2017-11-13', '%Y-%m-%d'), STR_TO_DATE('2019-08-06', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7 ARM', STR_TO_DATE('2017-11-13', '%Y-%m-%d'), STR_TO_DATE('2019-08-06', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7 System Z', STR_TO_DATE('2018-04-10', '%Y-%m-%d'), STR_TO_DATE('2019-08-06', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7', STR_TO_DATE('2014-06-10', '%Y-%m-%d'), STR_TO_DATE('2019-08-06', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2019-05-07', '%Y-%m-%d'), STR_TO_DATE('2024-05-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('9', STR_TO_DATE('2022-05-18', '%Y-%m-%d'), STR_TO_DATE('2027-05-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'Oracle Linux', 'Oracle', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6', STR_TO_DATE('2011-01-01', '%Y-%m-%d'), STR_TO_DATE('2021-03-01', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7', STR_TO_DATE('2014-07-01', '%Y-%m-%d'), STR_TO_DATE('2024-07-01', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2019-07-01', '%Y-%m-%d'), STR_TO_DATE('2029-07-01', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('9', STR_TO_DATE('2022-06-01', '%Y-%m-%d'), STR_TO_DATE('2032-06-01', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'Debian', 'Debian Project', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6', STR_TO_DATE('2011-02-06', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2014-05-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7', STR_TO_DATE('2013-05-04', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2016-04-25', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2015-04-25', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2018-06-17', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('9', STR_TO_DATE('2017-06-17', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2020-07-18', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10', STR_TO_DATE('2019-07-06', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2022-09-10', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11', STR_TO_DATE('2021-08-14', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2024-07-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'Fedora', 'Red Hat', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('19', STR_TO_DATE('2013-07-02', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2015-01-06', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('20', STR_TO_DATE('2013-12-17', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2015-06-23', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('21', STR_TO_DATE('2014-12-09', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2015-12-01', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('22', STR_TO_DATE('2014-10-22', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2016-07-19', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('23', STR_TO_DATE('2015-11-03', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2016-12-20', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('24', STR_TO_DATE('2016-06-21', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2017-08-08', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('25', STR_TO_DATE('2016-11-22', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2017-12-12', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('26', STR_TO_DATE('2017-11-14', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2018-05-29', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('27', STR_TO_DATE('2014-10-22', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2018-11-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('28', STR_TO_DATE('2018-05-01', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2019-05-28', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('29', STR_TO_DATE('2018-10-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2019-11-26', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('30', STR_TO_DATE('2019-04-29', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2020-05-26', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('31', STR_TO_DATE('2019-10-29', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2020-11-24', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('32', STR_TO_DATE('2020-04-28', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2021-05-25', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('33', STR_TO_DATE('2020-10-27', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2021-11-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('34', STR_TO_DATE('2021-04-27', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2022-06-07', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('35', STR_TO_DATE('2021-11-02', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2022-12-13', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'AIX', 'IBM', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('5.3 Standard Edition', STR_TO_DATE('2004-07-13', '%Y-%m-%d'), STR_TO_DATE('2012-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6.1 Enterprise Edition', STR_TO_DATE('2008-09-12', '%Y-%m-%d'), STR_TO_DATE('2017-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6.1 Express Edition', STR_TO_DATE('2010-04-23', '%Y-%m-%d'), STR_TO_DATE('2017-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6.1 Standard Edition', STR_TO_DATE('2007-11-09', '%Y-%m-%d'), STR_TO_DATE('2017-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7.1 Express Edition', STR_TO_DATE('2010-09-10', '%Y-%m-%d'), STR_TO_DATE('2023-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7.1 Standard Edition', STR_TO_DATE('2010-09-10', '%Y-%m-%d'), STR_TO_DATE('2023-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7.2 Standard Edition', STR_TO_DATE('2015-12-04', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7.3 Standard Edition', STR_TO_DATE('2021-12-10', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'HP-UX','HP', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11i v2 Integrity', STR_TO_DATE('2003-10-01', '%Y-%m-%d'), STR_TO_DATE('2023-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11i v2 HP 9000', STR_TO_DATE('2004-02-01', '%Y-%m-%d'), STR_TO_DATE('2023-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11i v3 HP 9000', STR_TO_DATE('2007-02-01', '%Y-%m-%d'), STR_TO_DATE('2021-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11i v3 Integrity', STR_TO_DATE('2007-02-01', '%Y-%m-%d'), STR_TO_DATE('2025-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'Solaris', 'Oracle', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10', STR_TO_DATE('2005-01-31', '%Y-%m-%d'), STR_TO_DATE('2018-01-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11 Express', STR_TO_DATE('2010-11-15', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11', STR_TO_DATE('2011-11-09', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11.1', STR_TO_DATE('2012-10-03', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11.2', STR_TO_DATE('2014-04-29', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11.3', STR_TO_DATE('2015-10-26', '%Y-%m-%d'), STR_TO_DATE('2021-01-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11.4', STR_TO_DATE('2018-08-28', '%Y-%m-%d'), STR_TO_DATE('2031-11-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'Windows', 'Microsoft', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2008', STR_TO_DATE('2008-05-06', '%Y-%m-%d'), STR_TO_DATE('2015-01-13', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2008 R2', STR_TO_DATE('2009-10-22', '%Y-%m-%d'), STR_TO_DATE('2015-01-13', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2012', STR_TO_DATE('2012-10-30', '%Y-%m-%d'), STR_TO_DATE('2018-10-09', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2012 R2', STR_TO_DATE('2013-11-25', '%Y-%m-%d'), STR_TO_DATE('2018-10-09', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2016', STR_TO_DATE('2016-10-15', '%Y-%m-%d'), STR_TO_DATE('2022-01-11', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2019', STR_TO_DATE('2018-11-13', '%Y-%m-%d'), STR_TO_DATE('2024-01-09', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2022', STR_TO_DATE('2021-08-18', '%Y-%m-%d'), STR_TO_DATE('2026-10-13', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Server', 'Rocky Linux', 'Rocky Enterprise Software Foundation', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2021-06-21', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2029-05-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('9', STR_TO_DATE('2022-07-14', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2032-05-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'Tomcat', 'Apache Software Foundation', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES ('7', STR_TO_DATE('2013-01-10', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2021-03-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES ('8.0', STR_TO_DATE('2014-01-29', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2018-06-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES ('8.5', STR_TO_DATE('2016-03-17', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2024-03-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES ('9', STR_TO_DATE('2017-09-27', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES ('10', STR_TO_DATE('2020-12-03', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2022-10-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'WebLogic','Oracle', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3.0', STR_TO_DATE('2008-08-01', '%Y-%m-%d'), STR_TO_DATE('2014-01-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3.1', STR_TO_DATE('2009-06-01', '%Y-%m-%d'), STR_TO_DATE('2018-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3.2', STR_TO_DATE('2009-06-01', '%Y-%m-%d'), STR_TO_DATE('2018-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3.3', STR_TO_DATE('2009-06-01', '%Y-%m-%d'), STR_TO_DATE('2018-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3.4', STR_TO_DATE('2009-06-01', '%Y-%m-%d'), STR_TO_DATE('2018-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3.5', STR_TO_DATE('2009-06-01', '%Y-%m-%d'), STR_TO_DATE('2018-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3.6', STR_TO_DATE('2012-02-26', '%Y-%m-%d'), STR_TO_DATE('2018-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.1', STR_TO_DATE('2011-12-01', '%Y-%m-%d'), STR_TO_DATE('2017-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.2', STR_TO_DATE('2015-10-01', '%Y-%m-%d'), STR_TO_DATE('2025-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('14.1', STR_TO_DATE('2020-05-01', '%Y-%m-%d'), STR_TO_DATE('2025-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'Jeus', 'TmaxSoft', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6', STR_TO_DATE('2007-06-07', '%Y-%m-%d'), STR_TO_DATE('2018-12-31', '%Y-%m-%d'), STR_TO_DATE('2016-12-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7', STR_TO_DATE('2012-07-04', '%Y-%m-%d'), STR_TO_DATE('2022-06-30', '%Y-%m-%d'), STR_TO_DATE('2021-06-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2017-01-31', '%Y-%m-%d'), STR_TO_DATE('2027-03-31', '%Y-%m-%d'), STR_TO_DATE('2026-03-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8.5', STR_TO_DATE('2021-09-30', '%Y-%m-%d'), STR_TO_DATE('2027-03-31', '%Y-%m-%d'), STR_TO_DATE('2026-03-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'WebSphere', 'IBM', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7', STR_TO_DATE('2008-10-17', '%Y-%m-%d'), STR_TO_DATE('2018-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2011-07-22', '%Y-%m-%d'), STR_TO_DATE('2018-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8.5', STR_TO_DATE('2012-07-13', '%Y-%m-%d'), STR_TO_DATE('2018-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('9', STR_TO_DATE('2016-06-24', '%Y-%m-%d'), STR_TO_DATE('2030-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'Apache', 'Apache Software Foundation', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2.2', STR_TO_DATE('2005-12-01', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2017-12-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2.4', STR_TO_DATE('2012-02-21', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'OHS', 'Oracle', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.1', STR_TO_DATE('2011-12-01', '%Y-%m-%d'), STR_TO_DATE('2017-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.2', STR_TO_DATE('2015-10-01', '%Y-%m-%d'), STR_TO_DATE('2025-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'WebToB', 'TmaxSoft', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('4.1.5', STR_TO_DATE('2012-04-10', '%Y-%m-%d'), STR_TO_DATE('2018-06-30', '%Y-%m-%d'), STR_TO_DATE('2017-06-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('4.1.6', STR_TO_DATE('2013-12-19', '%Y-%m-%d'), STR_TO_DATE('2019-02-28', '%Y-%m-%d'), STR_TO_DATE('2018-02-28', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('4.1.7', STR_TO_DATE('2014-05-23', '%Y-%m-%d'), STR_TO_DATE('2019-06-30', '%Y-%m-%d'), STR_TO_DATE('2018-06-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('4.1.8', STR_TO_DATE('2014-08-29', '%Y-%m-%d'), STR_TO_DATE('2020-08-31', '%Y-%m-%d'), STR_TO_DATE('2019-08-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('4.1.9', STR_TO_DATE('2015-09-25', '%Y-%m-%d'), STR_TO_DATE('2022-06-30', '%Y-%m-%d'), STR_TO_DATE('2021-06-30', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('5', STR_TO_DATE('2016-03-31', '%Y-%m-%d'), STR_TO_DATE('2027-08-31', '%Y-%m-%d'), STR_TO_DATE('2026-08-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Middleware', 'JBoss', 'RedHat', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6', STR_TO_DATE('2012-06-01', '%Y-%m-%d'), STR_TO_DATE('2016-06-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('7', STR_TO_DATE('2016-05-01', '%Y-%m-%d'), STR_TO_DATE('2023-06-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Database', 'Oracle Database', 'Oracle', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.1', STR_TO_DATE('2004-01-01', '%Y-%m-%d'), STR_TO_DATE('2009-01-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.2', STR_TO_DATE('2005-07-01', '%Y-%m-%d'), STR_TO_DATE('2010-07-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11.1', STR_TO_DATE('2007-08-01', '%Y-%m-%d'), STR_TO_DATE('2012-08-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11.2', STR_TO_DATE('2009-09-01', '%Y-%m-%d'), STR_TO_DATE('2015-01-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.1 Enterprise Edition', STR_TO_DATE('2013-06-01', '%Y-%m-%d'), STR_TO_DATE('2018-07-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.1 Standard Edition', STR_TO_DATE('2013-06-01', '%Y-%m-%d'), STR_TO_DATE('2016-08-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.1 Standard Edition One (SE1)', STR_TO_DATE('2013-06-01', '%Y-%m-%d'), STR_TO_DATE('2016-08-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.1 Standard Edition One (SE2)', STR_TO_DATE('2015-09-01', '%Y-%m-%d'), STR_TO_DATE('2018-07-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12.2.0.1', STR_TO_DATE('2017-03-01', '%Y-%m-%d'), STR_TO_DATE('2020-11-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Database', 'MySQL', 'Oracle', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('5.6', STR_TO_DATE('2013-02-01', '%Y-%m-%d'), STR_TO_DATE('2018-02-28', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('5.7', STR_TO_DATE('2015-10-01', '%Y-%m-%d'), STR_TO_DATE('2020-10-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('8', STR_TO_DATE('2018-04-01', '%Y-%m-%d'), STR_TO_DATE('2025-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Database', 'MariaDB', 'MariaDB Foundation', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('5.5', STR_TO_DATE('2012-04-11', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2020-04-11', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10', STR_TO_DATE('2014-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2019-03-31', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.1', STR_TO_DATE('2015-10-17', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2020-10-17', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.2', STR_TO_DATE('2017-05-23', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2022-05-23', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.3', STR_TO_DATE('2018-05-25', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2023-05-25', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.4', STR_TO_DATE('2019-06-18', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2024-06-18', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10.5', STR_TO_DATE('2020-06-24', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2025-06-24', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Database', 'MSSQL', 'Microsoft', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2008', STR_TO_DATE('2008-11-06', '%Y-%m-%d'), STR_TO_DATE('2014-07-08', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2012', STR_TO_DATE('2012-05-20', '%Y-%m-%d'), STR_TO_DATE('2017-07-11', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2014', STR_TO_DATE('2014-06-05', '%Y-%m-%d'), STR_TO_DATE('2019-07-09', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2017', STR_TO_DATE('2017-09-29', '%Y-%m-%d'), STR_TO_DATE('2022-10-11', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2019', STR_TO_DATE('2019-11-04', '%Y-%m-%d'), STR_TO_DATE('2025-02-28', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('2022', STR_TO_DATE('2022-11-16', '%Y-%m-%d'), STR_TO_DATE('2028-01-11', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Database', 'Sybase', 'SAP', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('16', STR_TO_DATE('2014-03-14', '%Y-%m-%d'), STR_TO_DATE('2025-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Database', 'Tibero', 'TmaxSoft', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('6', STR_TO_DATE('2015-04-01', '%Y-%m-%d'), STR_TO_DATE('2024-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Java Application', 'Java By Oracle', 'Oracle', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.6', STR_TO_DATE('2006-12-01', '%Y-%m-%d'), STR_TO_DATE('2015-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.7', STR_TO_DATE('2011-07-01', '%Y-%m-%d'), STR_TO_DATE('2019-07-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.8', STR_TO_DATE('2014-03-01', '%Y-%m-%d'), STR_TO_DATE('2022-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('9', STR_TO_DATE('2017-09-01', '%Y-%m-%d'), STR_TO_DATE('2018-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10', STR_TO_DATE('2018-03-01', '%Y-%m-%d'), STR_TO_DATE('2018-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11', STR_TO_DATE('2018-09-01', '%Y-%m-%d'), STR_TO_DATE('2023-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12', STR_TO_DATE('2019-03-01', '%Y-%m-%d'), STR_TO_DATE('2019-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('13', STR_TO_DATE('2019-09-01', '%Y-%m-%d'), STR_TO_DATE('2020-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('14', STR_TO_DATE('2020-03-01', '%Y-%m-%d'), STR_TO_DATE('2020-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('15', STR_TO_DATE('2020-09-01', '%Y-%m-%d'), STR_TO_DATE('2021-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('16', STR_TO_DATE('2021-03-01', '%Y-%m-%d'), STR_TO_DATE('2021-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('17', STR_TO_DATE('2021-09-01', '%Y-%m-%d'), STR_TO_DATE('2026-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('18', STR_TO_DATE('2022-03-01', '%Y-%m-%d'), STR_TO_DATE('2022-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('19', STR_TO_DATE('2022-09-01', '%Y-%m-%d'), STR_TO_DATE('2023-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('20', STR_TO_DATE('2023-03-01', '%Y-%m-%d'), STR_TO_DATE('2023-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('21', STR_TO_DATE('2023-09-01', '%Y-%m-%d'), STR_TO_DATE('2028-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Java Application', 'Java By HP-UX', 'HP-UX', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.6', STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2018-06-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.7', STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2022-07-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.8', STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2025-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11', STR_TO_DATE('', '%Y-%m-%d'), STR_TO_DATE('2023-01-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Java Application', 'Java By IBM', 'IBM', 'N');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.6', STR_TO_DATE('2007-11-01', '%Y-%m-%d'), STR_TO_DATE('2017-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.6 z/OS', STR_TO_DATE('2008-01-01', '%Y-%m-%d'), STR_TO_DATE('2018-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.7', STR_TO_DATE('2011-09-01', '%Y-%m-%d'), STR_TO_DATE('2011-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.7 z/OS', STR_TO_DATE('2011-10-01', '%Y-%m-%d'), STR_TO_DATE('2022-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.8', STR_TO_DATE('2015-02-01', '%Y-%m-%d'), STR_TO_DATE('2025-04-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.8 z/OS', STR_TO_DATE('2015-03-01', '%Y-%m-%d'), STR_TO_DATE('2026-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Java Application', 'Java By Azul', 'Azul', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.8', STR_TO_DATE('2014-03-01', '%Y-%m-%d'), STR_TO_DATE('2030-12-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('9', STR_TO_DATE('2017-09-01', '%Y-%m-%d'), STR_TO_DATE('2018-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('10', STR_TO_DATE('2018-03-01', '%Y-%m-%d'), STR_TO_DATE('2018-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11', STR_TO_DATE('2018-09-01', '%Y-%m-%d'), STR_TO_DATE('2026-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('12', STR_TO_DATE('2019-03-01', '%Y-%m-%d'), STR_TO_DATE('2019-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('13', STR_TO_DATE('2019-09-01', '%Y-%m-%d'), STR_TO_DATE('2023-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('14', STR_TO_DATE('2020-03-01', '%Y-%m-%d'), STR_TO_DATE('2020-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('15', STR_TO_DATE('2020-09-01', '%Y-%m-%d'), STR_TO_DATE('2023-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('16', STR_TO_DATE('2021-03-01', '%Y-%m-%d'), STR_TO_DATE('2021-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('17', STR_TO_DATE('2021-09-01', '%Y-%m-%d'), STR_TO_DATE('2029-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('18', STR_TO_DATE('2022-03-01', '%Y-%m-%d'), STR_TO_DATE('2022-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('19', STR_TO_DATE('2022-09-01', '%Y-%m-%d'), STR_TO_DATE('2023-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('20', STR_TO_DATE('2023-03-01', '%Y-%m-%d'), STR_TO_DATE('2023-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('21', STR_TO_DATE('2023-09-01', '%Y-%m-%d'), STR_TO_DATE('2031-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

INSERT INTO PRODUCT_LIFECYCLE_RULES (SOLUTION_TYPE, SOLUTION_NAME, VENDOR, OPENSOURCE_YN) VALUES ('Java Application', 'Java By Eclipse Temurin', 'Eclipse Temurin', 'Y');
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('1.8', STR_TO_DATE('2014-03-01', '%Y-%m-%d'), STR_TO_DATE('2026-11-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('11', STR_TO_DATE('2018-09-01', '%Y-%m-%d'), STR_TO_DATE('2024-10-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('17', STR_TO_DATE('2021-09-01', '%Y-%m-%d'), STR_TO_DATE('2027-10-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('18', STR_TO_DATE('2022-03-01', '%Y-%m-%d'), STR_TO_DATE('2022-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('19', STR_TO_DATE('2022-09-01', '%Y-%m-%d'), STR_TO_DATE('2023-03-31', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));
INSERT INTO PRODUCT_LIFECYCLE_RULES_VERSION (VERSION, GA_DATETIME, EOS_DATETIME, EOL_DATETIME, PRODUCT_LIFECYCLE_RULES_ID) VALUES('20', STR_TO_DATE('2023-03-01', '%Y-%m-%d'), STR_TO_DATE('2023-09-30', '%Y-%m-%d'), STR_TO_DATE('', '%Y-%m-%d'), (SELECT MAX(PRODUCT_LIFECYCLE_RULES_ID) FROM PRODUCT_LIFECYCLE_RULES));

create or replace view v_discovered_node
as
/*disc server for project(not inventory)*/
select concat('DISC', '-', dim.inventory_type_code,'-', dim.discovered_instance_id) as id
     , dim.inventory_type_code as type
     , dim.discovered_instance_id as type_id
     , 'DISC_SVR' as name
     , 'SVR' as detail_type
     , 'ROOT' as parent_id
     , dim.project_id
     , dim.discovered_ip_address as ip
     , 'N' as is_inventory
     , null as engine_id
     , null as solution_name
     , null as running_status
  from discovered_instance_master dim
 where dim.inventory_type_code = 'SVR'
   and dim.delete_yn = 'N'
   and dim.possession_inventory_id is null
 union all
/*disc dbms for project(not inventory)*/
select concat('DISC', '-', dim.inventory_type_code,'-', di.database_instance_id) as id
     , dim.inventory_type_code as type
     , dim.discovered_instance_id as type_id
     , concat(dim.discovered_ip_address, '-', dim.discovered_detail_division) as name
     , 'DBMS' as detail_type
     , 'ROOT' as parent_id
     , dim.project_id
     , dim.discovered_ip_address as ip
     , 'N' as is_inventory
     , null as engine_id
     , case
          when cd.code_name_english is null then dim.inventory_detail_type_code
          else cd.code_name_english
       end as solution_name
     , null as running_status
  from discovered_instance_master dim
  join database_instance di
    on di.database_instance_id = dim.discovered_instance_id
  left join discovered_instance_master dims
    on dims.discovered_ip_address = dim.discovered_ip_address
   and dims.inventory_type_code = 'SVR'
  left join code_detail cd
    on cd.common_code = dim.inventory_detail_type_code
   and cd.domain_code = 1013
 where dim.inventory_type_code = 'DBMS'
   and dim.delete_yn = 'N'
   and dim.possession_inventory_id is null;

create or replace view v_inventory_node
as
/*service info*/
select concat('SERV','-', service_id) as id
     , 'SERV' as type
     , service_id as type_id
     , service_name as name
     , 'SERV' as detail_type
     , 'ROOT' as parent_id
     , project_id
     , null as ip
     , 'Y' as is_inventory
     , null as engine_id
     , null as solution_name
     , null as running_status
  from service_master
 where delete_yn = 'N'
 union all
/*server for service*/
select concat(im.inventory_type_code,'-', im.inventory_id) as id
     , im.inventory_type_code as type
     , im.inventory_id as type_id
     , im.inventory_name as name
     , 'INV' as detail_type
     , concat('SERV', '-', si.service_id) as parent_id
     , im.project_id
     , sm.representative_ip_address as ip
     , 'Y' as is_inventory
     , null as engine_id
     , case when plr.solution_name is null then ss.os_alias
            else plr.solution_name
       end as solution_name
     , null as running_status
  from inventory_master im
  join service_inventory si
    on si.inventory_id  = im.inventory_id
  join server_master sm
    on sm.server_inventory_id = im.inventory_id
  left join inventory_lifecycle_version_link ilvl
    on ilvl.inventory_id = im.inventory_id
  left join product_lifecycle_rules_version plrv
    on plrv.product_lifecycle_rules_version_id = ilvl.product_version_id
  left join product_lifecycle_rules plr
    on plr.product_lifecycle_rules_id = plrv.product_lifecycle_rules_id
  left join server_summary ss
    on im.inventory_id = ss.server_inventory_id
 where im.inventory_type_code = 'SVR'
   and im.delete_yn = 'N'
 union all
/*middleware for server*/
select concat(im.inventory_type_code,'-', mi.middleware_instance_id) as id
     , im.inventory_type_code as type
     , dim.discovered_instance_id as type_id
     , mi.middleware_instance_name as name
     , mm.middleware_type_code as detail_type
     , concat('SVR', '-', im.server_inventory_id) as parent_id
     , im.project_id
     , sm.representative_ip_address as ip
     , 'Y' as is_inventory
     , im.inventory_id as engine_id
     , case when plr.solution_name is null then cd.code_name_english
            else plr.solution_name
       end as solution_name
     , case when mi.running_user is null or mi.running_user = '' then 'Stopped'
            else 'Running'
       end as running_status
  from inventory_master im
  join middleware_master mm
    on mm.middleware_inventory_id = im.inventory_id
  join server_master sm
    on sm.server_inventory_id = im.server_inventory_id
  join discovered_instance_master dim
    on dim.possession_inventory_id = im.inventory_id
  join middleware_instance mi
    on mi.middleware_instance_id = dim.discovered_instance_id
  left join inventory_lifecycle_version_link ilvl
    on ilvl.inventory_id = im.inventory_id
  left join product_lifecycle_rules_version plrv
    on plrv.product_lifecycle_rules_version_id = ilvl.product_version_id
  left join product_lifecycle_rules plr
    on plr.product_lifecycle_rules_id = plrv.product_lifecycle_rules_id
  left join code_detail cd
    on cd.common_code = im.inventory_detail_type_code
   and cd.domain_code = 1013
 where im.inventory_type_code = 'MW'
   and im.delete_yn = 'N'
   and dim.delete_yn = 'N'
 union all
/*database for server*/
select concat(im.inventory_type_code,'-', di.database_instance_id) as id
     , im.inventory_type_code as type
     , dim.discovered_instance_id as type_id
     , di.database_service_name as name
     , null as detail_type
     , concat('SVR', '-', im.server_inventory_id) as parent_id
     , im.project_id
     , dim.discovered_ip_address as ip
     , 'Y' as is_inventory
     , im.inventory_id as engine_id
     , case when plr.solution_name is null then cd.code_name_english
            else plr.solution_name
       end as solution_name
     , null as running_status
  from discovered_instance_master dim
  join inventory_master im
    on im.inventory_id = dim.possession_inventory_id
  join database_instance di
    on di.database_instance_id = dim.discovered_instance_id
  left join inventory_lifecycle_version_link ilvl
    on ilvl.inventory_id = im.inventory_id
  left join product_lifecycle_rules_version plrv
    on plrv.product_lifecycle_rules_version_id = ilvl.product_version_id
  left join product_lifecycle_rules plr
    on plr.product_lifecycle_rules_id = plrv.product_lifecycle_rules_id
  left join code_detail cd
    on cd.common_code = im.inventory_detail_type_code
   and cd.domain_code = 1013
 where dim.inventory_type_code = 'DBMS'
   and dim.delete_yn = 'N'
   and im.delete_yn = 'N'
 union all
/*application for middleware*/
select concat(dim.inventory_type_code,'-', midi.application_instance_id) as id
     , dim.inventory_type_code as type
     , dim.discovered_instance_id as type_id
     , im.inventory_name as name
     , im.inventory_detail_type_code as detail_type
     , concat('MW', '-', dima.discovered_instance_id) as parent_id
     , im.project_id
     , dim.discovered_ip_address as ip
     , 'Y' as is_inventory
     , im.inventory_id as engine_id
     , case when plr.solution_name is null then
                case when im.inventory_detail_type_code in ('EAR', 'WAR', 'JAR') then 'Java'
                     else null
                end
            else plr.solution_name
       end as solution_name
     , null as running_status
  from discovered_instance_master dim
  join inventory_master im
    on im.inventory_id = dim.possession_inventory_id
   and dim.inventory_type_code = 'APP'
   and im.inventory_type_code = 'APP'
  join middleware_instance_application_instance midi
    on midi.application_instance_id = dim.discovered_instance_id
  join discovered_instance_master dima
    on dima.discovered_instance_id = midi.middleware_instance_id
  left join inventory_lifecycle_version_link ilvl
    on ilvl.inventory_id = im.inventory_id
  left join product_lifecycle_rules_version plrv
    on plrv.product_lifecycle_rules_version_id = ilvl.java_version_id
  left join product_lifecycle_rules plr
    on plr.product_lifecycle_rules_id = plrv.product_lifecycle_rules_id
 where dim.delete_yn = 'N'
   and im.delete_yn = 'N'
 union all
/*application for standalone*/
select concat(dim.inventory_type_code,'-', dim.discovered_instance_id) as id
     , dim.inventory_type_code as type
     , dim.discovered_instance_id as type_id
     , im.inventory_name as name
     , im.inventory_detail_type_code as detail_type
     , concat('SVR', '-', im.server_inventory_id) as parent_id
     , im.project_id
     , dim.discovered_ip_address as ip
     , 'Y' as is_inventory
     , im.inventory_id as engine_id
     , case when plr.solution_name is null then
                case when im.inventory_detail_type_code in ('EAR', 'WAR', 'JAR') then 'Java'
                     else null
                end
            else plr.solution_name
       end as solution_name
     , null as running_status
  from discovered_instance_master dim
  join inventory_master im
    on im.inventory_id = dim.possession_inventory_id
   and dim.inventory_type_code = 'APP'
   and im.inventory_type_code = 'APP'
   and dim.delete_yn = 'N'
   and im.delete_yn = 'N'
  left join middleware_instance_application_instance miai
    on miai.application_instance_id = dim.discovered_instance_id
  left join inventory_lifecycle_version_link ilvl
    on ilvl.inventory_id = im.inventory_id
  left join product_lifecycle_rules_version plrv
    on plrv.product_lifecycle_rules_version_id = ilvl.java_version_id
  left join product_lifecycle_rules plr
    on plr.product_lifecycle_rules_id = plrv.product_lifecycle_rules_id
 where miai.application_instance_id is null;